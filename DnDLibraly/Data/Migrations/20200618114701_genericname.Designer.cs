// <auto-generated />
using System;
using DnDLibraly.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DnDLibraly.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200618114701_genericname")]
    partial class genericname
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DnDLibraly.Models.Adventurer", b =>
                {
                    b.Property<int>("AdventurerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AttackPoints")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double>("DefensePoints")
                        .HasColumnType("float");

                    b.Property<double>("HealthPoints")
                        .HasColumnType("float");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<double>("ManaPoints")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("AdventurerId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Adventurers");

                    b.HasData(
                        new
                        {
                            AdventurerId = 1,
                            AttackPoints = 20.0,
                            CreatedOn = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefensePoints = 9.1099999999999994,
                            HealthPoints = 50.0,
                            Level = 15,
                            ManaPoints = 0.0,
                            Name = "Gladitorian"
                        },
                        new
                        {
                            AdventurerId = 2,
                            AttackPoints = 8.0,
                            CreatedOn = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefensePoints = 13.369999999999999,
                            HealthPoints = 30.0,
                            Level = 10,
                            ManaPoints = 10.0,
                            Name = "Pheterion"
                        },
                        new
                        {
                            AdventurerId = 3,
                            AttackPoints = 3.2000000000000002,
                            CreatedOn = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefensePoints = 20.0,
                            HealthPoints = 42.0,
                            Level = 12,
                            ManaPoints = 6.9000000000000004,
                            Name = "Makintosh"
                        },
                        new
                        {
                            AdventurerId = 4,
                            AttackPoints = 16.600000000000001,
                            CreatedOn = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefensePoints = 9.9000000000000004,
                            HealthPoints = 32.200000000000003,
                            Level = 14,
                            ManaPoints = 20.0,
                            Name = "Gosho"
                        },
                        new
                        {
                            AdventurerId = 5,
                            AttackPoints = 18.0,
                            CreatedOn = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefensePoints = 17.0,
                            HealthPoints = 40.0,
                            Level = 16,
                            ManaPoints = 0.0,
                            Name = "Bark"
                        },
                        new
                        {
                            AdventurerId = 6,
                            AttackPoints = 12.199999999999999,
                            CreatedOn = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefensePoints = 12.199999999999999,
                            HealthPoints = 50.0,
                            Level = 15,
                            ManaPoints = 10.0,
                            Name = "Ultrapure"
                        },
                        new
                        {
                            AdventurerId = 7,
                            AttackPoints = 6.9000000000000004,
                            CreatedOn = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefensePoints = 42.0,
                            HealthPoints = 69.0,
                            Level = 19,
                            ManaPoints = 42.0,
                            Name = "TodiInc"
                        });
                });

            modelBuilder.Entity("DnDLibraly.Models.Fight", b =>
                {
                    b.Property<int>("FightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpPoints")
                        .HasColumnType("int");

                    b.Property<double>("PriceWon")
                        .HasColumnType("float");

                    b.Property<string>("Terrain")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("FightId");

                    b.ToTable("Fights");

                    b.HasData(
                        new
                        {
                            FightId = 1,
                            CreatedOn = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpPoints = 0,
                            PriceWon = 0.0,
                            Terrain = "Plain"
                        },
                        new
                        {
                            FightId = 2,
                            CreatedOn = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpPoints = 0,
                            PriceWon = 500.0,
                            Terrain = "Forest"
                        });
                });

            modelBuilder.Entity("DnDLibraly.Models.MIdWareTables.AdventurerFight", b =>
                {
                    b.Property<int>("AdventurerId")
                        .HasColumnType("int");

                    b.Property<int>("FightId")
                        .HasColumnType("int");

                    b.HasKey("AdventurerId", "FightId");

                    b.HasIndex("FightId");

                    b.ToTable("AdventurerFights");

                    b.HasData(
                        new
                        {
                            AdventurerId = 1,
                            FightId = 1
                        },
                        new
                        {
                            AdventurerId = 2,
                            FightId = 1
                        });
                });

            modelBuilder.Entity("DnDLibraly.Models.MIdWareTables.MonsterFight", b =>
                {
                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<int>("FightId")
                        .HasColumnType("int");

                    b.HasKey("MonsterId", "FightId");

                    b.HasIndex("FightId");

                    b.ToTable("MonsterFights");

                    b.HasData(
                        new
                        {
                            MonsterId = 1,
                            FightId = 1
                        },
                        new
                        {
                            MonsterId = 3,
                            FightId = 1
                        });
                });

            modelBuilder.Entity("DnDLibraly.Models.Monster", b =>
                {
                    b.Property<int>("MonsterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AttackPoints")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<double>("DefensePoints")
                        .HasColumnType("float");

                    b.Property<int>("ExPoints")
                        .HasColumnType("int");

                    b.Property<double>("HealthPoints")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("MonsterId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Monsters");

                    b.HasData(
                        new
                        {
                            MonsterId = 1,
                            AttackPoints = 22.0,
                            CreatedOn = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefensePoints = 19.0,
                            ExPoints = 18000,
                            HealthPoints = 256.0,
                            Name = "Adult Red Dragon"
                        },
                        new
                        {
                            MonsterId = 2,
                            AttackPoints = 24.0,
                            CreatedOn = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefensePoints = 19.0,
                            ExPoints = 18000,
                            HealthPoints = 240.0,
                            Name = "Adult Black Dragon"
                        },
                        new
                        {
                            MonsterId = 3,
                            AttackPoints = 11.0,
                            CreatedOn = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefensePoints = 10.0,
                            ExPoints = 10,
                            HealthPoints = 10.0,
                            Name = "Goblin"
                        },
                        new
                        {
                            MonsterId = 4,
                            AttackPoints = 20.0,
                            CreatedOn = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefensePoints = 15.0,
                            ExPoints = 15000,
                            HealthPoints = 240.0,
                            Name = "Dark Monarch"
                        },
                        new
                        {
                            MonsterId = 5,
                            AttackPoints = 30.0,
                            CreatedOn = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefensePoints = 25.0,
                            ExPoints = 20000,
                            HealthPoints = 300.0,
                            Name = "Blue-Eyes White Dragon"
                        },
                        new
                        {
                            MonsterId = 6,
                            AttackPoints = 18.0,
                            CreatedOn = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DefensePoints = 18.0,
                            ExPoints = 7000,
                            HealthPoints = 150.0,
                            Name = "The Fallen"
                        });
                });

            modelBuilder.Entity("DnDLibraly.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 21,
                            Email = "martomail@abv.bg",
                            FName = "Martin",
                            LName = "Vasilev",
                            Password = "martopass",
                            Username = "martov"
                        },
                        new
                        {
                            Id = 2,
                            Age = 25,
                            Email = "macintosh@abv.bg",
                            FName = "Richard",
                            LName = "Hristov",
                            Password = "arentgay",
                            Username = "traps"
                        },
                        new
                        {
                            Id = 3,
                            Age = 64,
                            Email = "ohhimark@abv.bg",
                            FName = "Tommy",
                            LName = "Wiseau",
                            Password = "apartlisa",
                            Username = "yourtearingme"
                        },
                        new
                        {
                            Id = 4,
                            Age = 17,
                            Email = "dva",
                            FName = "Hana",
                            LName = "Song",
                            Password = "dva",
                            Username = "dva"
                        });
                });

            modelBuilder.Entity("DnDLibraly.Models.MIdWareTables.AdventurerFight", b =>
                {
                    b.HasOne("DnDLibraly.Models.Adventurer", "Adventurer")
                        .WithMany("AdventurerFight")
                        .HasForeignKey("AdventurerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DnDLibraly.Models.Fight", "Fight")
                        .WithMany("AdventurerFight")
                        .HasForeignKey("FightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DnDLibraly.Models.MIdWareTables.MonsterFight", b =>
                {
                    b.HasOne("DnDLibraly.Models.Fight", "Fight")
                        .WithMany("MonsterFight")
                        .HasForeignKey("FightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DnDLibraly.Models.Monster", "Monster")
                        .WithMany("MonsterFight")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
